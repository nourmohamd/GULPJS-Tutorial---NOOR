Create Any Task:
================
1 - const gulp = require("gulp");
2 - 
    gulp.task("name_task", async function () {
        statements Executes When You Write (gulp name_task) in NodeJS command Prompt
    });

Lesson 1 ===> Src, Dest
1==gulp.src("From") ===> For Select File|Files You Want To Use It For Implement Operations On It
Example:
1
gulp.src("project/index.html") ===> Select One File HTML
2
gulp.src("project/*.html) ===> Select All HTML Files
2==gulp.dest("To") ===> Select Position You Want Files To Go When It Finish Operations
Example:
gulp.dest("dist/html")
=============
Full Example:
=============
const gulp = require("gulp");
gulp.task("k1", async function() {
    return gulp.src("project/index.html")
    .pipe(gulp.dest("dist/html"));
});

Lesson 2 ===> Ways To Use Plugins
way 1
=====
1 - const gulp = require("gulp");
2 - 
    gulp.task("name_task", async function () {
        statements Executes When You Write (gulp name_task) in NodeJS command Prompt
    });
way 2
=====
1 - const { src, dest } = require("gulp");
2 - exports.default = function () { Your Code Here }
Run By:gulp
Example1:
??????Move All Files From Project To Dist
const {src, dest} = require("gulp");
exports.default = function () {
    src("project/*.*)
    .pipe(dest("dist"));
}

Lesson 3 ===> gulp-concat Plugin
================================

URL
---
https://www.npmjs.com/package/gulp-concat

Installiation
-------------
npm install --save-dev gulp-concat

What is it work?
----------------
For Concatination Files Together For Generates One File For << Client >>

Example:
--------
1 - Either
const gulp = require("gulp");
const concat = require("gulp-concat");
gulp.task("name_task", async function () {
    return gulp.src("project/*.css")
    .pipe(concat("main.css"))
    .pipe(gulp.dest("dist/css"));
});
2 - Or
const { src, dest } = require("gulp");
const concat = require("gulp-concat");
exports.default = function () {
  return src("project/css/*.css")
    .pipe(concat("style.css"))
    .pipe(dest("dist/css"));
};

Lesson 4 ===> gulp-autoprefixer
===============================

URL
---
https://www.npmjs.com/package/gulp-autoprefixer

Installiation
-------------
npm install --save-dev gulp-autoprefixer

What is it work?
----------------
It adds Vendor Prefixes Automateclly to Code CSS

Example:
--------
import gulp from "gulp";
import concat from "gulp-concat";
import autoprefixer from "gulp-autoprefixer";
export default () =>
  gulp
    .src("project/css/*.css")
    .pipe(autoprefixer("last 2 versions"))
    .pipe(concat("all.css"))
    .pipe(gulp.dest("dist/css"));

Lesson 5 ===> gulp-sass
=======================

URL
---
https://www.npmjs.com/package/gulp-sass

Installiation
-------------
npm install sass gulp-sass --save-dev

What is it work?
----------------
This Plugin is for Make Compiling For Sass Files

Example:
--------
import gulp from "gulp";
import concat from "gulp-concat";
import autoprefixer from "gulp-autoprefixer";
import dartSass from "sass";
import gulpSass from "gulp-sass";
const sass = gulpSass(dartSass);
export default () =>
  gulp
    .src("project/app.css")
    .pipe(sass()) || .pipe(sass({outputStyle: 'compressed'}))
    .pipe(autoprefixer("last 2 versions"))
    .pipe(concat("aaa.css"))
    .pipe(gulp.dest("dist"));

Lesson 6 ===> gulp-pug
======================

URL
---
https://www.npmjs.com/package/gulp-pug

Installiation
-------------
npm install gulp-pug --save-dev

What is it work?
----------------
This Plugin is for Make Compiling For Pug Files

Example:
--------
const { src, dest } = require("gulp");
const pug = require("gulp-pug");
function a(cb) {
  src("project/html/*.pug")
  .pipe(pug()) || .pipe(pug({pretty: true}))
  .pipe(dest("dist/html"));
  cb();
}
exports.default = a;

Lesson 7 ===> Local Server ( static-server )
============================================

URL
---
https://www.npmjs.com/package/static-server

Installiation
-------------
npm install static-server --save

What is it work?
----------------
It Make Local Server

Example:
--------
1 - Create server.js file For Server Next gulpfile.js

--server.js
-----------
var StaticServer = require("static-server");
var server = new StaticServer({
  rootPath: "./dist/", // required, the root of the server file tree
  port: 8000, // required, the port to listen
});

server.start(function () {
  console.log("Server Starting On Port :", server.port);
});
2 - in gulpfile.js Write

--gulpfile.js
-------------
const { src, dest } = require("gulp");
const pug = require("gulp-pug");
const concat = require("gulp-concat");
function a(cb) {
  require("./server.js");
  src("project/html/a1.pug")
    .pipe(pug({ pretty: true }))
    .pipe(concat("index.html"))
    .pipe(dest("dist/"));
  cb();
}

exports.default = a;

To Run Server
-------------
node server.js ===> in nodejs command Prompt
|
gulp ===> Run Task

Lesson 8 ===> Watching
======================

URL
---
https://gulpjs.com/docs/en/getting-started/watching-files

Installiation
-------------
Watching Didn't need to any install only contain in gulp
const {watch, series} = require("gulp");

What is it work?
----------------
It Make Always Watch for any Changes in path

Full Example:
-------------
const { src, dest, watch, series } = require("gulp");
const pug = require("gulp-pug");
const concat = require("gulp-concat");
const sass = require("gulp-sass")(require("sass"));

function css(cb) {
  src("./project/css/main.scss")
    .pipe(sass())
    .pipe(concat("style.css"))
    .pipe(dest("./dist/css"));
  cb();
}

function html(cb) {
  src("./project/index.pug")
    .pipe(pug({ pretty: true }))
    .pipe(dest("./dist"));
  cb();
}

exports.default = () => {
  require("./server.js");
  watch("./project/css/**/*.scss", series([css]));
  watch(["./project/index.pug", "./project/**/*.pug"], series([html]));
};

Lesson 9 ===> gulp-livereload
=============================

URL
---
https://www.npmjs.com/package/gulp-livereload

Installiation
-------------
npm install gulp-livereload --save-dev

What is it work?
----------------
It is same from {live server} Extenssion in VS Code But it works with gulpfile.js file

Full Example:
-------------
const { src, dest, watch, series } = require("gulp");
const pug = require("gulp-pug");
const concat = require("gulp-concat");
const sass = require("gulp-sass")(require("sass"));
const livereload = require("gulp-livereload");
function css(cb) {
  src("./project/css/main.scss")
    .pipe(sass())
    .pipe(concat("style.css"))
    .pipe(dest("./dist/css"))
    .pipe(livereload());
  cb();
}

function html(cb) {
  src("./project/index.pug")
    .pipe(pug({ pretty: true }))
    .pipe(dest("./dist"))
    .pipe(livereload());
  cb();
}

exports.default = () => {
  require("./server.js");
  livereload.listen();
  watch("./project/css/**/*.scss", series([css]));
  watch(["./project/index.pug", "./project/**/*.pug"], series([html]));
};

Then in every html|pug file Write This Rules
--------------------------------------------
<script src="http://localhost:35729/livereload.js"></script>

Then Run Your Gulp Task
-----------------------

Open index.html by http://localhost:port-server-number
------------------------------------------------------

Lesson 10 ===> gulp-sourcemaps
==============================

URL
---
https://www.npmjs.com/package/gulp-sourcemaps

Installiation
-------------
npm install gulp-sourcemaps --save-dev

What is it work?
----------------
It Make Accessibility To Code CSS From Browser For Elements 
Easeir because it write name of file css next of css code

Example:
--------
const { src, dest, watch, series } = require("gulp");
const pug = require("gulp-pug");
const concat = require("gulp-concat");
const sass = require("gulp-sass")(require("sass"));
const livereload = require("gulp-livereload");
const sourcemaps = require("gulp-sourcemaps");
function css(cb) {
  src("./project/css/main.scss")
    .pipe(sourcemaps.init())
    .pipe(sass())
    .pipe(concat("style.css"))
    .pipe(sourcemaps.write(".")) ===> { For Make File name.css.map next of name.css }, Either Without "."
    ======> The File name.css.map will be
    .pipe(dest("./dist/css"))
    .pipe(livereload());
  cb();
}

function html(cb) {
  src("./project/index.pug")
    .pipe(pug({ pretty: true }))
    .pipe(dest("./dist"))
    .pipe(livereload());
  cb();
}

exports.default = () => {
  require("./server.js");
  livereload.listen();
  watch("./project/css/**/*.scss", series([css]));
  watch(["./project/index.pug", "./project/**/*.pug"], series([html]));
};

Lesson 11 ===> gulp-uglify
==========================

URL
---
https://www.npmjs.com/package/gulp-uglify

Installiation
-------------
npm install gulp-uglify --save-dev

What is it work?
----------------
It Uses For Compressed JavaScript Files

Example:
--------
const { src, dest } = require("gulp");
const uglify = require("gulp-uglify");
function js(cb) {
  src("./project/script/*.js").pipe(uglify()).pipe(dest("./dist/script"));
  cb();
}
exports.default = js;

Lesson 12 ===> gulp-notify
==========================

URL
---
https://www.npmjs.com/package/gulp-uglify

Installiation
-------------
npm install gulp-notify --save-dev

What is it work?
----------------
It Show Message For Status Of Code { notification }
We Added .pipe(notify("Our Message")) Before livereload and after .pipe(dest("..."))

Example:
--------
const { src, dest, watch, series } = require("gulp");
const notify = require("gulp-notify");
const livereload = require("gulp-livereload");
function ex(cb) {
  src("./project/file.txt")
    .pipe(dest("./dist"))
    .pipe(notify("Yes That Nice"))
    .pipe(livereload());
  cb();
}
exports.default = () => {
  require("./server.js");
  livereload.listen();
  watch("./project/file.txt", series(ex));
};
